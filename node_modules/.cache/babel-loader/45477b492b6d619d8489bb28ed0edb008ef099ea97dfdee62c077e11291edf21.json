{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Downloads\\\\task-manager-bootstrap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport { ThemeContext, ThemeProvider } from './components/ThemeContext';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = AppWrapper;\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const saved = localStorage.getItem('tasks');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [filter, setFilter] = useState('All');\n  const [search, setSearch] = useState('');\n  const {\n    darkMode,\n    toggleDarkMode\n  } = useContext(ThemeContext);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = task => setTasks([...tasks, task]);\n  const toggleTask = id => setTasks(tasks.map(task => task.id === id ? {\n    ...task,\n    completed: !task.completed\n  } : task));\n  const deleteTask = id => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      setTasks(tasks.filter(task => task.id !== id));\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'Completed' && !task.completed) return false;\n    if (filter === 'Pending' && task.completed) return false;\n    if (search && !task.title.toLowerCase().includes(search.toLowerCase())) return false;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'dark' : 'light',\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Task Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: toggleDarkMode,\n            children: darkMode ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          search: search,\n          setSearch: setSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-outline-primary me-2\",\n            to: \"/\",\n            children: \"All Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-outline-success\",\n            to: \"/completed\",\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: filteredTasks,\n              toggleTask: toggleTask,\n              deleteTask: deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/completed\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: tasks.filter(t => t.completed),\n              toggleTask: toggleTask,\n              deleteTask: deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k035pA8Uf+zrB1Wr1vo8y9m3nnU=\");\n_c2 = App;\nexport default AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","TaskForm","TaskList","FilterBar","SearchBar","ThemeContext","ThemeProvider","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","AppWrapper","children","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","tasks","setTasks","saved","localStorage","getItem","JSON","parse","filter","setFilter","search","setSearch","darkMode","toggleDarkMode","setItem","stringify","addTask","task","toggleTask","id","map","completed","deleteTask","window","confirm","filteredTasks","title","toLowerCase","includes","className","onClick","to","path","element","t","_c2","$RefreshReg$"],"sources":["C:/Users/himan/Downloads/task-manager-bootstrap/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport FilterBar from './components/FilterBar';\nimport SearchBar from './components/SearchBar';\nimport { ThemeContext, ThemeProvider } from './components/ThemeContext';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\n\nfunction AppWrapper() {\n  return (\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  );\n}\n\nfunction App() {\n  const [tasks, setTasks] = useState(() => {\n    const saved = localStorage.getItem('tasks');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [filter, setFilter] = useState('All');\n  const [search, setSearch] = useState('');\n  const { darkMode, toggleDarkMode } = useContext(ThemeContext);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = (task) => setTasks([...tasks, task]);\n\n  const toggleTask = (id) =>\n    setTasks(tasks.map((task) => task.id === id ? { ...task, completed: !task.completed } : task));\n\n  const deleteTask = (id) => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      setTasks(tasks.filter((task) => task.id !== id));\n    }\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === 'Completed' && !task.completed) return false;\n    if (filter === 'Pending' && task.completed) return false;\n    if (search && !task.title.toLowerCase().includes(search.toLowerCase())) return false;\n    return true;\n  });\n\n  return (\n    <div className={darkMode ? 'dark' : 'light'}>\n      <Router>\n        <div className=\"container py-4\">\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\n            <h1>Task Manager</h1>\n            <button className=\"btn btn-secondary\" onClick={toggleDarkMode}>\n              {darkMode ? 'Light Mode' : 'Dark Mode'}\n            </button>\n          </div>\n\n          <TaskForm addTask={addTask} />\n          <SearchBar search={search} setSearch={setSearch} />\n          <FilterBar filter={filter} setFilter={setFilter} />\n\n          <nav className=\"mb-3\">\n            <Link className=\"btn btn-outline-primary me-2\" to=\"/\">All Tasks</Link>\n            <Link className=\"btn btn-outline-success\" to=\"/completed\">Completed Tasks</Link>\n          </nav>\n\n          <Routes>\n            <Route path=\"/\" element={<TaskList tasks={filteredTasks} toggleTask={toggleTask} deleteTask={deleteTask} />} />\n            <Route path=\"/completed\" element={<TaskList tasks={tasks.filter(t => t.completed)} toggleTask={toggleTask} deleteTask={deleteTask} />} />\n          </Routes>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default AppWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}